// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v5.29.1
// source: protocol/service.proto

package service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Pong_Status int32

const (
	Pong_STATUS_UNKNOWN Pong_Status = 0
	Pong_STATUS_EVEN    Pong_Status = 1
	Pong_STATUS_ODD     Pong_Status = 2
)

// Enum value maps for Pong_Status.
var (
	Pong_Status_name = map[int32]string{
		0: "STATUS_UNKNOWN",
		1: "STATUS_EVEN",
		2: "STATUS_ODD",
	}
	Pong_Status_value = map[string]int32{
		"STATUS_UNKNOWN": 0,
		"STATUS_EVEN":    1,
		"STATUS_ODD":     2,
	}
)

func (x Pong_Status) Enum() *Pong_Status {
	p := new(Pong_Status)
	*p = x
	return p
}

func (x Pong_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Pong_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_protocol_service_proto_enumTypes[0].Descriptor()
}

func (Pong_Status) Type() protoreflect.EnumType {
	return &file_protocol_service_proto_enumTypes[0]
}

func (x Pong_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Pong_Status.Descriptor instead.
func (Pong_Status) EnumDescriptor() ([]byte, []int) {
	return file_protocol_service_proto_rawDescGZIP(), []int{9, 0}
}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Ping message content
}

func (x *Ping) Reset() {
	*x = Ping{}
	mi := &file_protocol_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_protocol_service_proto_rawDescGZIP(), []int{0}
}

func (x *Ping) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ClientMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*ClientMessage_ClientHello
	//	*ClientMessage_Pong
	Message isClientMessage_Message `protobuf_oneof:"message"`
}

func (x *ClientMessage) Reset() {
	*x = ClientMessage{}
	mi := &file_protocol_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientMessage) ProtoMessage() {}

func (x *ClientMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientMessage.ProtoReflect.Descriptor instead.
func (*ClientMessage) Descriptor() ([]byte, []int) {
	return file_protocol_service_proto_rawDescGZIP(), []int{1}
}

func (m *ClientMessage) GetMessage() isClientMessage_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *ClientMessage) GetClientHello() *ClientHello {
	if x, ok := x.GetMessage().(*ClientMessage_ClientHello); ok {
		return x.ClientHello
	}
	return nil
}

func (x *ClientMessage) GetPong() *Pong {
	if x, ok := x.GetMessage().(*ClientMessage_Pong); ok {
		return x.Pong
	}
	return nil
}

type isClientMessage_Message interface {
	isClientMessage_Message()
}

type ClientMessage_ClientHello struct {
	ClientHello *ClientHello `protobuf:"bytes,1,opt,name=client_hello,json=clientHello,proto3,oneof"`
}

type ClientMessage_Pong struct {
	Pong *Pong `protobuf:"bytes,2,opt,name=pong,proto3,oneof"`
}

func (*ClientMessage_ClientHello) isClientMessage_Message() {}

func (*ClientMessage_Pong) isClientMessage_Message() {}

// Used for the friend listener connection
//
//	message FriendListenerMessage {
//	    FriendList friend_list = 1;
//	}
type FriendListenerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*FriendListenerRequest_FriendList
	//	*FriendListenerRequest_KeepaliveAck
	Message isFriendListenerRequest_Message `protobuf_oneof:"message"`
}

func (x *FriendListenerRequest) Reset() {
	*x = FriendListenerRequest{}
	mi := &file_protocol_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FriendListenerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendListenerRequest) ProtoMessage() {}

func (x *FriendListenerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendListenerRequest.ProtoReflect.Descriptor instead.
func (*FriendListenerRequest) Descriptor() ([]byte, []int) {
	return file_protocol_service_proto_rawDescGZIP(), []int{2}
}

func (m *FriendListenerRequest) GetMessage() isFriendListenerRequest_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *FriendListenerRequest) GetFriendList() *FriendList {
	if x, ok := x.GetMessage().(*FriendListenerRequest_FriendList); ok {
		return x.FriendList
	}
	return nil
}

func (x *FriendListenerRequest) GetKeepaliveAck() *KeepAliveAck {
	if x, ok := x.GetMessage().(*FriendListenerRequest_KeepaliveAck); ok {
		return x.KeepaliveAck
	}
	return nil
}

type isFriendListenerRequest_Message interface {
	isFriendListenerRequest_Message()
}

type FriendListenerRequest_FriendList struct {
	FriendList *FriendList `protobuf:"bytes,1,opt,name=friend_list,json=friendList,proto3,oneof"` // Client sends friend list
}

type FriendListenerRequest_KeepaliveAck struct {
	KeepaliveAck *KeepAliveAck `protobuf:"bytes,2,opt,name=keepalive_ack,json=keepaliveAck,proto3,oneof"` // Client acknowledges a keepalive ping
}

func (*FriendListenerRequest_FriendList) isFriendListenerRequest_Message() {}

func (*FriendListenerRequest_KeepaliveAck) isFriendListenerRequest_Message() {}

type FriendList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendIds []string `protobuf:"bytes,1,rep,name=friend_ids,json=friendIds,proto3" json:"friend_ids,omitempty"` // List of friend IDs to track
}

func (x *FriendList) Reset() {
	*x = FriendList{}
	mi := &file_protocol_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FriendList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendList) ProtoMessage() {}

func (x *FriendList) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendList.ProtoReflect.Descriptor instead.
func (*FriendList) Descriptor() ([]byte, []int) {
	return file_protocol_service_proto_rawDescGZIP(), []int{3}
}

func (x *FriendList) GetFriendIds() []string {
	if x != nil {
		return x.FriendIds
	}
	return nil
}

type FriendListenerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Message:
	//
	//	*FriendListenerResponse_FriendUpdate
	//	*FriendListenerResponse_KeepalivePing
	Message isFriendListenerResponse_Message `protobuf_oneof:"message"`
}

func (x *FriendListenerResponse) Reset() {
	*x = FriendListenerResponse{}
	mi := &file_protocol_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FriendListenerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendListenerResponse) ProtoMessage() {}

func (x *FriendListenerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendListenerResponse.ProtoReflect.Descriptor instead.
func (*FriendListenerResponse) Descriptor() ([]byte, []int) {
	return file_protocol_service_proto_rawDescGZIP(), []int{4}
}

func (m *FriendListenerResponse) GetMessage() isFriendListenerResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *FriendListenerResponse) GetFriendUpdate() *FriendUpdate {
	if x, ok := x.GetMessage().(*FriendListenerResponse_FriendUpdate); ok {
		return x.FriendUpdate
	}
	return nil
}

func (x *FriendListenerResponse) GetKeepalivePing() *KeepAlivePing {
	if x, ok := x.GetMessage().(*FriendListenerResponse_KeepalivePing); ok {
		return x.KeepalivePing
	}
	return nil
}

type isFriendListenerResponse_Message interface {
	isFriendListenerResponse_Message()
}

type FriendListenerResponse_FriendUpdate struct {
	FriendUpdate *FriendUpdate `protobuf:"bytes,1,opt,name=friend_update,json=friendUpdate,proto3,oneof"` // Used to update friend online status
}

type FriendListenerResponse_KeepalivePing struct {
	KeepalivePing *KeepAlivePing `protobuf:"bytes,2,opt,name=keepalive_ping,json=keepalivePing,proto3,oneof"` // Server sends keepalive ping
}

func (*FriendListenerResponse_FriendUpdate) isFriendListenerResponse_Message() {}

func (*FriendListenerResponse_KeepalivePing) isFriendListenerResponse_Message() {}

//	message FriendStatusUpdate {
//	    string client_id = 1; // The client whose state changed
//	    bool is_online = 2;
//	}
type FriendUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`  // The client whose state changed
	IsOnline bool   `protobuf:"varint,2,opt,name=is_online,json=isOnline,proto3" json:"is_online,omitempty"` // The online status of the client
}

func (x *FriendUpdate) Reset() {
	*x = FriendUpdate{}
	mi := &file_protocol_service_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FriendUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FriendUpdate) ProtoMessage() {}

func (x *FriendUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_service_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FriendUpdate.ProtoReflect.Descriptor instead.
func (*FriendUpdate) Descriptor() ([]byte, []int) {
	return file_protocol_service_proto_rawDescGZIP(), []int{5}
}

func (x *FriendUpdate) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *FriendUpdate) GetIsOnline() bool {
	if x != nil {
		return x.IsOnline
	}
	return false
}

type KeepAlivePing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Customizable message for debugging (e.g., "Ping from Server")
}

func (x *KeepAlivePing) Reset() {
	*x = KeepAlivePing{}
	mi := &file_protocol_service_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeepAlivePing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAlivePing) ProtoMessage() {}

func (x *KeepAlivePing) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_service_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepAlivePing.ProtoReflect.Descriptor instead.
func (*KeepAlivePing) Descriptor() ([]byte, []int) {
	return file_protocol_service_proto_rawDescGZIP(), []int{6}
}

func (x *KeepAlivePing) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type KeepAliveAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"` // Customizable message for debugging (e.g., "ACK from Client")
}

func (x *KeepAliveAck) Reset() {
	*x = KeepAliveAck{}
	mi := &file_protocol_service_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeepAliveAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAliveAck) ProtoMessage() {}

func (x *KeepAliveAck) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_service_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepAliveAck.ProtoReflect.Descriptor instead.
func (*KeepAliveAck) Descriptor() ([]byte, []int) {
	return file_protocol_service_proto_rawDescGZIP(), []int{7}
}

func (x *KeepAliveAck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ClientHello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *ClientHello) Reset() {
	*x = ClientHello{}
	mi := &file_protocol_service_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientHello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientHello) ProtoMessage() {}

func (x *ClientHello) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_service_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientHello.ProtoReflect.Descriptor instead.
func (*ClientHello) Descriptor() ([]byte, []int) {
	return file_protocol_service_proto_rawDescGZIP(), []int{8}
}

func (x *ClientHello) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status Pong_Status `protobuf:"varint,1,opt,name=status,proto3,enum=service.Pong_Status" json:"status,omitempty"`
}

func (x *Pong) Reset() {
	*x = Pong{}
	mi := &file_protocol_service_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_service_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_protocol_service_proto_rawDescGZIP(), []int{9}
}

func (x *Pong) GetStatus() Pong_Status {
	if x != nil {
		return x.Status
	}
	return Pong_STATUS_UNKNOWN
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Status   string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	mi := &file_protocol_service_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_service_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_protocol_service_proto_rawDescGZIP(), []int{10}
}

func (x *UserInfo) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *UserInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UserList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*UserInfo `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *UserList) Reset() {
	*x = UserList{}
	mi := &file_protocol_service_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserList) ProtoMessage() {}

func (x *UserList) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_service_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserList.ProtoReflect.Descriptor instead.
func (*UserList) Descriptor() ([]byte, []int) {
	return file_protocol_service_proto_rawDescGZIP(), []int{11}
}

func (x *UserList) GetUsers() []*UserInfo {
	if x != nil {
		return x.Users
	}
	return nil
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_protocol_service_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_protocol_service_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_protocol_service_proto_rawDescGZIP(), []int{12}
}

var File_protocol_service_proto protoreflect.FileDescriptor

var file_protocol_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x22, 0x20, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x7a, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x68,
	0x65, 0x6c, 0x6c, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f,
	0x48, 0x00, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12,
	0x23, 0x0a, 0x04, 0x70, 0x6f, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04,
	0x70, 0x6f, 0x6e, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x98, 0x01, 0x0a, 0x15, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0b, 0x66, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x3c, 0x0a, 0x0d, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x61,
	0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x41, 0x63, 0x6b, 0x48,
	0x00, 0x52, 0x0c, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x41, 0x63, 0x6b, 0x42,
	0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2b, 0x0a, 0x0a, 0x46, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x66, 0x72,
	0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x16, 0x46, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3c, 0x0a, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x48, 0x00, 0x52, 0x0c, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x12, 0x3f, 0x0a, 0x0e, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x69,
	0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x50, 0x69, 0x6e, 0x67,
	0x48, 0x00, 0x52, 0x0d, 0x6b, 0x65, 0x65, 0x70, 0x61, 0x6c, 0x69, 0x76, 0x65, 0x50, 0x69, 0x6e,
	0x67, 0x42, 0x09, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x48, 0x0a, 0x0c,
	0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x29, 0x0a, 0x0d, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c,
	0x69, 0x76, 0x65, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0x28, 0x0a, 0x0c, 0x4b, 0x65, 0x65, 0x70, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x41, 0x63,
	0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x2a, 0x0a, 0x0b, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x12,
	0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x3d, 0x0a,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f, 0x44, 0x44, 0x10, 0x02, 0x22, 0x3f, 0x0a, 0x08,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x33, 0x0a,
	0x08, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x88, 0x02, 0x0a, 0x06,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x0d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x28, 0x01, 0x30, 0x01,
	0x12, 0x55, 0x0a, 0x0e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e,
	0x65, 0x72, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x46, 0x72, 0x69,
	0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x28, 0x01, 0x30, 0x01, 0x12, 0x33, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x6c,
	0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x11,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x30, 0x01, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protocol_service_proto_rawDescOnce sync.Once
	file_protocol_service_proto_rawDescData = file_protocol_service_proto_rawDesc
)

func file_protocol_service_proto_rawDescGZIP() []byte {
	file_protocol_service_proto_rawDescOnce.Do(func() {
		file_protocol_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_protocol_service_proto_rawDescData)
	})
	return file_protocol_service_proto_rawDescData
}

var file_protocol_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protocol_service_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_protocol_service_proto_goTypes = []any{
	(Pong_Status)(0),               // 0: service.Pong.Status
	(*Ping)(nil),                   // 1: service.Ping
	(*ClientMessage)(nil),          // 2: service.ClientMessage
	(*FriendListenerRequest)(nil),  // 3: service.FriendListenerRequest
	(*FriendList)(nil),             // 4: service.FriendList
	(*FriendListenerResponse)(nil), // 5: service.FriendListenerResponse
	(*FriendUpdate)(nil),           // 6: service.FriendUpdate
	(*KeepAlivePing)(nil),          // 7: service.KeepAlivePing
	(*KeepAliveAck)(nil),           // 8: service.KeepAliveAck
	(*ClientHello)(nil),            // 9: service.ClientHello
	(*Pong)(nil),                   // 10: service.Pong
	(*UserInfo)(nil),               // 11: service.UserInfo
	(*UserList)(nil),               // 12: service.UserList
	(*Empty)(nil),                  // 13: service.Empty
}
var file_protocol_service_proto_depIdxs = []int32{
	9,  // 0: service.ClientMessage.client_hello:type_name -> service.ClientHello
	10, // 1: service.ClientMessage.pong:type_name -> service.Pong
	4,  // 2: service.FriendListenerRequest.friend_list:type_name -> service.FriendList
	8,  // 3: service.FriendListenerRequest.keepalive_ack:type_name -> service.KeepAliveAck
	6,  // 4: service.FriendListenerResponse.friend_update:type_name -> service.FriendUpdate
	7,  // 5: service.FriendListenerResponse.keepalive_ping:type_name -> service.KeepAlivePing
	0,  // 6: service.Pong.status:type_name -> service.Pong.Status
	11, // 7: service.UserList.users:type_name -> service.UserInfo
	2,  // 8: service.Server.Communicate:input_type -> service.ClientMessage
	3,  // 9: service.Server.FriendListener:input_type -> service.FriendListenerRequest
	13, // 10: service.Server.GetAllUserInfo:input_type -> service.Empty
	13, // 11: service.Server.StreamAllUserInfo:input_type -> service.Empty
	1,  // 12: service.Server.Communicate:output_type -> service.Ping
	5,  // 13: service.Server.FriendListener:output_type -> service.FriendListenerResponse
	12, // 14: service.Server.GetAllUserInfo:output_type -> service.UserList
	12, // 15: service.Server.StreamAllUserInfo:output_type -> service.UserList
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_protocol_service_proto_init() }
func file_protocol_service_proto_init() {
	if File_protocol_service_proto != nil {
		return
	}
	file_protocol_service_proto_msgTypes[1].OneofWrappers = []any{
		(*ClientMessage_ClientHello)(nil),
		(*ClientMessage_Pong)(nil),
	}
	file_protocol_service_proto_msgTypes[2].OneofWrappers = []any{
		(*FriendListenerRequest_FriendList)(nil),
		(*FriendListenerRequest_KeepaliveAck)(nil),
	}
	file_protocol_service_proto_msgTypes[4].OneofWrappers = []any{
		(*FriendListenerResponse_FriendUpdate)(nil),
		(*FriendListenerResponse_KeepalivePing)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protocol_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protocol_service_proto_goTypes,
		DependencyIndexes: file_protocol_service_proto_depIdxs,
		EnumInfos:         file_protocol_service_proto_enumTypes,
		MessageInfos:      file_protocol_service_proto_msgTypes,
	}.Build()
	File_protocol_service_proto = out.File
	file_protocol_service_proto_rawDesc = nil
	file_protocol_service_proto_goTypes = nil
	file_protocol_service_proto_depIdxs = nil
}
